{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from data_prepare import *\n",
    "import os\n",
    "import pandas as pd\n",
    "# import warnings\n",
    "# warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 提取并绘制标注区域"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "PAD_2B_0425_OK_outer_305-3_2_21_m0.jpg: 100% 1321/1321 [03:12<00:00,  6.87it/s]     "
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "==提取并绘制标注区域完成==\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "jf = r\"D:\\pad_before\\ml\\NG_0501\\ng.json\"\n",
    "src = os.path.dirname(jf)\n",
    "dst = src + \"-defect\"\n",
    "offset = 30\n",
    "\n",
    "extract_region(src, dst, jf, offset, square=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 特征提取"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "calculate features: PAD_2B_0425_OK_outer_305-3_2_21_m0.jpg: 100% 1321/1321 [03:01<00:00,  7.30it/s]     \n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*********特征提取耗时 82.37112092971802\n",
      "(2216, 27)\n",
      "27\n",
      "['contrast', 'dissimilarity', 'homogeneity', 'energy', 'correlation', 'ASM', 'ostu_ret', 'mean', 'diff_dilate', 'diff_erode', 'var', 'skewness', 'kurtosis', 'area', 'perimeter', 'circularity', 'centripetal_moment_ratio', 'diagonal', 'angle', 'F1', 'F2', 'F3', 'F3-F1', 'FF', 'inertia_ratio', 'conDom', 'bg_mean']\n"
     ]
    }
   ],
   "source": [
    "jf = r\"D:\\pad_before\\ml\\NG_0501\\ng.json\"\n",
    "orig_src = os.path.dirname(jf)\n",
    "dst = os.path.dirname(jf)\n",
    "\n",
    "# df, features = calcu_features(orig_src, jf, wanted_features=['mean', 'diff_dilate', 'diff_erode', 'var', 'skewness', 'kurtosis', 'maxVal', 'mean_filter'])\n",
    "df, features = calcu_features(orig_src, jf)\n",
    "df.to_excel(os.path.join(dst, 'features.xlsx'))\n",
    "print(features)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 加类别"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "100%|██████████| 2216/2216 [00:06<00:00, 351.23it/s]\n"
     ]
    }
   ],
   "source": [
    "excel = r\"D:\\pad_before\\ml\\features.xlsx\"\n",
    "region_root = r\"D:\\pad_before\\ml\\NG_0501-defect\"\n",
    "add_labels(excel, region_root)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 保存数据"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "files = [i for i in os.listdir(r\"\\\\Ds418\\nas3\\A-ZK\\train_data\\merge_1215\\test-defect\\1\") if i.endswith(\"bmp\")]\n",
    "df.loc[files].to_excel(os.path.join(dst, 'features_1.xlsx'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 聚类"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "from sklearn.decomposition import PCA\n",
    "import numpy as np\n",
    "from sklearn import preprocessing\n",
    "\n",
    "df1 = df.loc[files]\n",
    "X = np.array(df1)\n",
    "# pca2d = PCA(n_components=2)\n",
    "# X_std = preprocessing.scale(X) # 数据标准化\n",
    "# X_2d = pca2d.fit_transform(X_std)# 数据降维至两维便于可视化\n",
    "\n",
    "y_pred = KMeans(n_clusters=3, random_state=9).fit_predict(X)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "import shutil\n",
    "\n",
    "for index,i in enumerate(df1.index):\n",
    "    y = y_pred[index]\n",
    "    os.makedirs(os.path.join(r\"C:\\Users\\1\\Desktop\\新建文件夹\\4\", str(y)), exist_ok=True)\n",
    "    shutil.copy(os.path.join(r\"C:\\Users\\1\\Desktop\\新建文件夹\\4\", i), os.path.join(r\"C:\\Users\\1\\Desktop\\新建文件夹\\4\", str(y), i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.cluster import KMeans\n",
    "import numpy as np\n",
    "from sklearn import preprocessing\n",
    "import pandas as pd\n",
    "import joblib\n",
    "import os\n",
    "from glob import glob\n",
    "import shutil\n",
    "from tqdm import tqdm\n",
    "\n",
    "\n",
    "# 训练数据和测试数据的excel需要在不同的文件夹里\n",
    "# 训练数据\n",
    "excel_file = r\"\\\\Ds418\\nas\\share\\LX\\tmp\\OQC\\station_cls_ext\\2_2_ext - 副本\\data.xlsx\"\n",
    "n_clusters = 20\n",
    "df = pd.read_excel(excel_file, index_col='jpg')\n",
    "X = np.array(df.drop(['label'], 1))\n",
    "X_std = preprocessing.scale(X) # 数据标准化\n",
    "km = KMeans(n_clusters=n_clusters, random_state=9).fit(X_std)\n",
    "joblib.dump(km, os.path.join(os.path.split(excel_file)[0], 'km{}.pkl'.format(n_clusters)))\n",
    "y_pred = km.predict(X_std)\n",
    "df_km = pd.DataFrame({\"real\": df.label, \"km\": y_pred}, index=df.index)\n",
    "df_km.to_excel(os.path.join(os.path.split(excel_file)[0], 'km{}_result.xlsx'.format(n_clusters)))\n",
    "\n",
    "# df_km = pd.read_excel(os.path.join(os.path.split(excel_file)[0], 'km{}_result.xlsx'.format(n_clusters)), index_col='Unnamed: 0')\n",
    "\n",
    "for i in tqdm(df_km.index):\n",
    "    img_g = glob(os.path.join(r\"\\\\Ds418\\nas\\share\\LX\\tmp\\OQC\\station_cls_ext\\2_2_ext - 副本\", \"*\", i))[0]\n",
    "    dst = os.path.join(os.path.split(excel_file)[0], \"data\", \"{}\".format(df_km.loc[i, \"km\"]))\n",
    "    # print(dst)\n",
    "    os.makedirs(dst, exist_ok=True)\n",
    "    shutil.copy(img_g, os.path.join(dst, i))\n",
    "\n",
    "\n",
    "# # 测试数据\n",
    "# excel_file = r\"\\\\Ds418\\nas3\\A-ZK\\train_data\\merge_1215\\test\\features_with_labels_test_7.xlsx\"\n",
    "# model_file = r\"\\\\Ds418\\nas3\\A-ZK\\train_data\\merge_1215\\train\\km.pkl\"\n",
    "# km = joblib.load(model_file)\n",
    "# df = pd.read_excel(excel_file, index_col='Unnamed: 0')\n",
    "# X = np.array(df.drop(['labels'], 1))\n",
    "# y_pred = km.predict(X)\n",
    "# df_km = pd.DataFrame({\"real\": df.labels, \"km\": y_pred}, index=df.index)\n",
    "# df_km.to_excel(os.path.join(os.path.split(excel_file)[0], 'km_result.xlsx'))\n",
    "\n",
    "\n",
    "# # 筛选指定类数据\n",
    "# excel_file = r\"\\\\Ds418\\nas3\\A-ZK\\train_data\\merge_1215\\clus\\clus_all\\features_with_labels.xlsx\"\n",
    "# excel_file_km = r\"\\\\Ds418\\nas3\\A-ZK\\train_data\\merge_1215\\clus\\clus_all\\km20_result.xlsx\"\n",
    "# label = 6\n",
    "# df = pd.read_excel(excel_file, index_col='Unnamed: 0')\n",
    "# df_km = pd.read_excel(excel_file_km, index_col='Unnamed: 0')\n",
    "# index_list = list(df_km[df_km[\"km\"] == label].index)\n",
    "# df_sub = df.loc[index_list,:]\n",
    "# df_sub.to_excel(os.path.join(os.path.split(excel_file)[0], 'km_result_label{}.xlsx'.format(label)))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 加载数据"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Unnamed: 0</th>\n",
       "      <th>mean</th>\n",
       "      <th>diff_dilate</th>\n",
       "      <th>diff_erode</th>\n",
       "      <th>var</th>\n",
       "      <th>skewness</th>\n",
       "      <th>kurtosis</th>\n",
       "      <th>maxVal</th>\n",
       "      <th>mean_filter</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AZK1_20221122_PS_3-3_1_16_0034_17.bmp</td>\n",
       "      <td>51.149351</td>\n",
       "      <td>-6.787787</td>\n",
       "      <td>0.038768</td>\n",
       "      <td>68.406266</td>\n",
       "      <td>1.462110</td>\n",
       "      <td>3.481912</td>\n",
       "      <td>2.465985</td>\n",
       "      <td>69.096774</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AZK1_20221122_PS_3-3_1_17_0035_0.bmp</td>\n",
       "      <td>71.175904</td>\n",
       "      <td>-20.300410</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>512.438937</td>\n",
       "      <td>1.041585</td>\n",
       "      <td>0.450403</td>\n",
       "      <td>3.350642</td>\n",
       "      <td>83.665354</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AZK1_20221122_YS_14-1_1_32_0014_1.bmp</td>\n",
       "      <td>52.797753</td>\n",
       "      <td>-9.139249</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>31.487186</td>\n",
       "      <td>0.420621</td>\n",
       "      <td>-0.132582</td>\n",
       "      <td>1.218155</td>\n",
       "      <td>63.357143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AZK1_20221122_YS_14-1_1_32_0014_2.bmp</td>\n",
       "      <td>48.443235</td>\n",
       "      <td>-3.211980</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>15.696233</td>\n",
       "      <td>-0.676603</td>\n",
       "      <td>1.292061</td>\n",
       "      <td>1.704954</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AZK1_20221122_YS_14-1_1_32_0014_3.bmp</td>\n",
       "      <td>50.554348</td>\n",
       "      <td>-5.474821</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>22.044148</td>\n",
       "      <td>0.375177</td>\n",
       "      <td>-0.028274</td>\n",
       "      <td>2.465376</td>\n",
       "      <td>62.482759</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>AZK_1129_NG_0066_10-1_1_31_0.bmp</td>\n",
       "      <td>102.330144</td>\n",
       "      <td>-17.909583</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1446.728326</td>\n",
       "      <td>0.082768</td>\n",
       "      <td>-1.066088</td>\n",
       "      <td>2.910428</td>\n",
       "      <td>113.051724</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>AZK_1129_NG_0068_11-1_1_26_0.bmp</td>\n",
       "      <td>107.128322</td>\n",
       "      <td>-23.133552</td>\n",
       "      <td>0.741988</td>\n",
       "      <td>1221.097429</td>\n",
       "      <td>0.547897</td>\n",
       "      <td>-0.234075</td>\n",
       "      <td>3.917265</td>\n",
       "      <td>111.199836</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>AZK_1129_NG_0079_11-1_1_4_0.bmp</td>\n",
       "      <td>67.067961</td>\n",
       "      <td>-7.278487</td>\n",
       "      <td>0.691533</td>\n",
       "      <td>543.238100</td>\n",
       "      <td>3.868219</td>\n",
       "      <td>17.346514</td>\n",
       "      <td>3.925717</td>\n",
       "      <td>76.926606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>AZK_1129_NG_0086_31-1_1_17_0.bmp</td>\n",
       "      <td>77.745434</td>\n",
       "      <td>-42.547249</td>\n",
       "      <td>-27.098443</td>\n",
       "      <td>4219.065333</td>\n",
       "      <td>1.609664</td>\n",
       "      <td>1.637837</td>\n",
       "      <td>8.052624</td>\n",
       "      <td>129.869452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>AZK_1129_NG_0086_31-1_1_17_1.bmp</td>\n",
       "      <td>54.643744</td>\n",
       "      <td>-35.342818</td>\n",
       "      <td>1.042089</td>\n",
       "      <td>3103.876436</td>\n",
       "      <td>1.766210</td>\n",
       "      <td>2.680872</td>\n",
       "      <td>3.442651</td>\n",
       "      <td>126.496528</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>95 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                               Unnamed: 0        mean  diff_dilate  \\\n",
       "0   AZK1_20221122_PS_3-3_1_16_0034_17.bmp   51.149351    -6.787787   \n",
       "1    AZK1_20221122_PS_3-3_1_17_0035_0.bmp   71.175904   -20.300410   \n",
       "2   AZK1_20221122_YS_14-1_1_32_0014_1.bmp   52.797753    -9.139249   \n",
       "3   AZK1_20221122_YS_14-1_1_32_0014_2.bmp   48.443235    -3.211980   \n",
       "4   AZK1_20221122_YS_14-1_1_32_0014_3.bmp   50.554348    -5.474821   \n",
       "..                                    ...         ...          ...   \n",
       "90       AZK_1129_NG_0066_10-1_1_31_0.bmp  102.330144   -17.909583   \n",
       "91       AZK_1129_NG_0068_11-1_1_26_0.bmp  107.128322   -23.133552   \n",
       "92        AZK_1129_NG_0079_11-1_1_4_0.bmp   67.067961    -7.278487   \n",
       "93       AZK_1129_NG_0086_31-1_1_17_0.bmp   77.745434   -42.547249   \n",
       "94       AZK_1129_NG_0086_31-1_1_17_1.bmp   54.643744   -35.342818   \n",
       "\n",
       "    diff_erode          var  skewness   kurtosis    maxVal  mean_filter  \n",
       "0     0.038768    68.406266  1.462110   3.481912  2.465985    69.096774  \n",
       "1     0.000000   512.438937  1.041585   0.450403  3.350642    83.665354  \n",
       "2     0.000000    31.487186  0.420621  -0.132582  1.218155    63.357143  \n",
       "3     0.000000    15.696233 -0.676603   1.292061  1.704954     0.000000  \n",
       "4     0.000000    22.044148  0.375177  -0.028274  2.465376    62.482759  \n",
       "..         ...          ...       ...        ...       ...          ...  \n",
       "90    0.000000  1446.728326  0.082768  -1.066088  2.910428   113.051724  \n",
       "91    0.741988  1221.097429  0.547897  -0.234075  3.917265   111.199836  \n",
       "92    0.691533   543.238100  3.868219  17.346514  3.925717    76.926606  \n",
       "93  -27.098443  4219.065333  1.609664   1.637837  8.052624   129.869452  \n",
       "94    1.042089  3103.876436  1.766210   2.680872  3.442651   126.496528  \n",
       "\n",
       "[95 rows x 9 columns]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_excel(r\"\\\\Ds418\\nas3\\A-ZK\\train_data\\merge\\features_4huidi.xlsx\")\n",
    "data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 复制图像到指定类别"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "import shutil\n",
    "for i in data[data[\"maxVal\"]>4][\"Unnamed: 0\"]:\n",
    "    shutil.move(os.path.join(r\"C:\\Users\\1\\Desktop\\新建文件夹\\4\\huidi\", i), os.path.join(r\"C:\\Users\\1\\Desktop\\新建文件夹\\4\\huidi\", \"w_over_4\", i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in data[data[\"maxVal\"]<=4][data[\"mean\"]-data[\"mean_filter\"]<=0][data[\"mean_filter\"]>80][\"Unnamed: 0\"]:\n",
    "    shutil.move(os.path.join(r\"C:\\Users\\1\\Desktop\\新建文件夹\\4\\huidi\\others\", i), os.path.join(r\"C:\\Users\\1\\Desktop\\新建文件夹\\4\\huidi\\others\", \"m_over_80\", i))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.7.0",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "ad2bdc8ecc057115af97d19610ffacc2b4e99fae6737bb82f5d7fb13d2f2c186"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
